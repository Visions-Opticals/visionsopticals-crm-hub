---
- hosts: dorcas_io_azure
  remote_user: ubuntu
  vars:
    git_branch: tomide-hub-branch
    dest_path: /var/www/hub.dorcas.ng
    repo: https://hostville:sD1AGa-gCdJxPXPb8uVB@gitlab.com/dorcasng/dorcas-hub
    server_state: started
    etc:
      env:
        - settings:
            - name: "APP_NAME"
              value: "Hub"
            - name: "APP_ENV"
              value: "production"
            - name: "APP_KEY"
              value: "base64:I3NFdR+AFWLg8OlU535RGibdUiJlFhQzoHTyhVylNec="
            - name: "APP_DEBUG"
              value: "false"
            - name: "APP_LOG_LEVEL"
              value: "debug"
            - name: "APP_URL"
              value: "https://hub.dorcas.ng"
            - name: "APP_URL_STATIC"
              value: "https://hub.dorcas.ng"
            - name: "AWS_ACCOUNT_ID"
              value: "161475284744"
            - name: "AWS_KEY"
              value: "AKIASLGFNJ4EKCBZLFLC"
            - name: "AWS_SECRET"
              value: "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"
            - name: "AWS_REGION"
              value: "eu-west-2"
            - name: "AWS_SES_REGION"
              value: "eu-west-1"
            - name: "AWS_SQS_QUEUE"
              value: "dorcas-hub-queue"
            - name: "AWS_KEY_EKO"
              value: "AKIAS75A2ZYDMUMM3PEV"
            - name: "AWS_SECRET_EKO"
              value: "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"
            - name: "AWS_SES_REGION_EKO"
              value: "eu-west-1"
            - name: "BUGSNAG_API_KEY"
              value: "95aa9aff0599ae3ee57ec2046af9422d"
            - name: "BROADCAST_DRIVER"
              value: "pusher"
            - name: "CACHE_DRIVER"
              value: "redis"
            - name: "DB_CONNECTION"
              value: "mysql"
            - name: "DB_HOST"
              value: "dorcas-api.mysql.database.azure.com"
            - name: "DB_DATABASE"
              value: "dorcas_hub"
            - name: "DB_USERNAME"
              value: "dorcas@dorcas-api"
            - name: "DB_PASSWORD"
              value: "Jks7h-sJn3HA00AJ3n-JSnA@5"
            - name: "DORCAS_BASE_URL"
              value: "https://api.dorcas.ng"
            - name: "DORCAS_ENV"
              value: "production"
            - name: "DORCAS_CLIENT_ID"
              value: "2"
            - name: "DORCAS_CLIENT_SECRET"
              value: "hFWx5xkPbVKXvLwD17Lbl5MFczORgKZwvawKOzpc"
            - name: "DORCAS_PERSONAL_CLIENT_ID"
              value: "1"
            - name: "DORCAS_PERSONAL_CLIENT_SECRET"
              value: "jA4GG1wJ8bFIKApWviFuyfNAN29737s258nVVCjk"
            - name: "MAIL_DRIVER"
              value: "mailgun"
            - name: "MAILGUN_DOMAIN"
              value: "mg.dorcas.io"
            - name: "MAILGUN_SECRET"
              value: "a8e08585449bcf3bc04c8449d324270f-7238b007-3ef23eeb"
            - name: "MAILGUN_ENDPOINT"
              value: "api.eu.mailgun.net"
            - name: "MAIL_FROM_ADDRESS"
              value: "hello@dorcas.ng"
            - name: "QUEUE_DRIVER"
              value: "redis"
            - name: "SESSION_DRIVER"
              value: "redis"
            - name: "SESSION_LIFETIME"
              value: "120"
            - name: "SESSION_CONNECTION"
              value: "default"
            - name: "REDIS_HOST"
              value: "dorcas-cache.redis.cache.windows.net"
            - name: "REDIS_PASSWORD"
              value: "GeTN1V6htgiT6KQBmplMp4wpuR5ukL9A0CP0Uoej87k="
            - name: "PAYSTACK_PUBLIC_KEY"
              value: "pk_live_701d138b55cd09c0eb9f0f2bf77d716d050c87b3"
            - name: "PAYSTACK_SECRET_KEY"
              value: "sk_live_67a75cbf57d27d8aa923b6509c7d7d58527669ba"
            - name: "RESELLER_CLUB_ENV"
              value: "live"
            - name: "AZURE_STORAGE_ACCOUNT"
              value: "dorcas"
            - name: "AZURE_STORAGE_KEY"
              value: "sKBVAfm31PQ8taXhzqmvF9B63uB9D+w24LdwQ1dBhOQeE2ZxXbvXggdSyVgc0RN9052dUAF56qEi+L4Pn5Zizg=="
            - name: "AZURE_QUEUE_NAME"
              value: "dorcas-hub-queue"
            - name: "AZURE_STORAGE_CONTAINER"
              value: "dorcas-storage"
            - name: "REDIS_QUEUE"
              value: "dorcas-hub-queue"
    supervisor:
      worker01:
        name: hub-worker
        settings:
          - name: "process_name"
            value: "%(program_name)s_%(process_num)02d"
          - name: "command"
            value: "php /var/www/hub.dorcas.ng/artisan queue:work redis --sleep=3 --tries=3"
          - name: "autostart"
            value: "true"
          - name: "autorestart"
            value: "true"
          - name: "user"
            value: "www-data"
          - name: "numprocs"
            value: "4"
          - name: "redirect_stderr"
            value: "true"
          - name: "stdout_logfile"
            value: "/var/www/hub.dorcas.ng/storage/logs/hub-worker.log"
  tasks:
    - name: stop supervisor
      command: supervisorctl stop all
      tags:
        - process_management
      become: yes
      become_method: sudo
    - name: clear out deploy path
      command: rm -rf {{ dest_path }}
      become: yes
      become_method: sudo
      tags:
        - cleanup
        - deploy
    - name: pull source from the gitlab repository
      git: repo={{ repo }} dest={{ dest_path }} accept_hostkey=yes version={{ git_branch | default('master') }}
      become: yes
      become_method: sudo
      tags:
        - pull
        - deploy
    - name: adjust privileges and ownerships for the directories and create log files
      file:
        path="{{ item.path }}"
        state={{ item.state | default(omit) }}
        mode={{ item.mode | default('u=rwx,g=rwx,o=rx') }}
        group={{ item.group | default('www-data') }}
        owner={{ ansible_user }}
        recurse={{ item.recurse | default(omit) }}
      with_items:
        - { path: "{{ dest_path }}", state: "directory", recurse: "yes" }
        - { path: "{{ dest_path }}/bootstrap/cache", state: "directory", recurse: "yes", mode: 'u=rwx,g=rwx,o=rwx' }
        - { path: "{{ dest_path }}/storage", state: "directory", recurse: "yes", mode: 'u=rwx,g=rwx,o=rwx' }
        - { path: "{{ dest_path }}/storage/logs", state: "directory", recurse: "yes", mode: 'u=rwx,g=rwx,o=rw' }
        - { path: "{{ dest_path }}/storage/logs/laravel.log", state: "touch", mode: 'u=rwx,g=rw,o=rw' }
        - { path: "{{ dest_path }}/artisan", state: "file", mode: 'u=rwx,g=rx,o=x' }
      become: yes
      become_method: sudo
      tags:
        - configuration
        - permissions
    - include_tasks: ansible-automation/tasks/create-env-configuration.yml
      vars:
        filename: .env
        destination: "{{ dest_path }}/.env"
        config_section: "{{ etc.env }}"
      tags:
        - configuration
    - name: set permissions on all files
      command: find "{{ dest_path }}" -type f -name '*.php' -exec chmod 644 {} \;
      tags:
        - configuration
      become: yes
      become_method: sudo
    - name: get composer setup
      get_url: url=https://getcomposer.org/installer dest="{{ dest_path }}/composer-setup.php"
      tags:
        - composer
        - install
    - name: install composer
      command: php composer-setup.php
      args:
        creates: composer.phar
        chdir: "{{ dest_path }}"
      tags:
        - composer
        - install
      become: yes
      become_method: sudo
    - name: remove composer-setup.php script
      file: path="{{ dest_path }}/composer-setup.php" state=absent
      tags:
        - composer
        - install
      become: yes
      become_method: sudo
    - name: install composer packages
      command: php composer.phar install
      args:
        chdir: "{{ dest_path }}"
      tags:
        - composer
        - install
      notify:
        - manage nginx
      become: yes
      become_method: sudo
    - name: (laravel) optimize app configuration loading
      command: "{{ dest_path }}/artisan config:cache"
      tags:
        - optimize
        - laravel
    - name: (laravel) publish dorcas package configurations
      command: "{{ dest_path }}/artisan vendor:publish --tag=config"
      tags:
        - optimize
        - laravel
        - package
    - include_tasks: ansible-automation/tasks/create-supervisor-program.yml
      vars:
        program: "{{ supervisor.worker01 }}"
        force: yes
      tags:
        - configuration
        - supervisord
    - name: reload supervisor daemon configuration files
      command: supervisorctl reread
      tags:
        - configuration
      become: yes
      become_method: sudo
    - name: update supervisor programs
      command: supervisorctl update
      tags:
        - configuration
      become: yes
      become_method: sudo
      notify:
        - start supervisor
    - name: clear cached view templates
      command: php artisan view:clear
      args:
        chdir: "{{ dest_path }}"
      tags:
        - cleanup
  handlers:
    - name: manage nginx
      service: name=nginx state={{ server_state | default(started) }}
      become: yes
      become_method: sudo
    - name: start supervisor
      command: supervisorctl start all
      become: yes
      become_method: sudo
